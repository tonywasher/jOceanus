<document>
    <properties>
        <title>GordianKnot Digests</title>
        <author email="Tony.Washer@yahoo.co.uk">Tony Washer</author>
    </properties>
    <body>
        <section name="Overview">
            <p>Digests are supported via the <strong>GordianDigestFactory</strong> interface.</p>
            <p>GordianKnot supports most Digests available from BouncyCastle plus some additional algorithms.</p>
            <p>JCA provides a subset of available algorithms as indicated</p>
        </section>
        <section name="Digests">
            <p>A digest is created by specifying a <strong>GordianDigestSpec</strong> which comprises the digestType/OutputLength plus StateLength if applicable.
                The digest can be used in much the same way as a JCA Digest, allowing reset, update and finalise methods.</p>
            <subsection name="Sample">
                <source>
                    /* Access factory */
                    final GordianFactory myBaseFactory = GordianGenerator.createFactory();
                    final GordianDigestFactory myDigestFactory = myBaseFactory.getDigestFactory();

                    /* Create digest */
                    final GordianDigestSpec mySpec = GordianDigestSpec.sha2(GordianLength.LEN_256);
                    final GordianDigest myDigest = myDigestFactory.createDigest(mySpec);

                    /* Calculate digest */
                    final byte[] myMessage = ...
                    myDigest.update(myMessage);
                    final byte[] myResult = myDigest.finish();
                </source>
            </subsection>
            <subsection name="Algorithms">
                <p>The following algorithms are supported.</p>
                <table class="defTable">
                    <tr><th class="defHdr">Algorithm</th><th class="defHdr">StateLength</th><th class="defHdr">OutputLengths</th>
                        <th class="defHdr">JCA</th><th class="defHdr">Notes</th></tr>
                    <tr><td rowspan="2">SHA2</td><td>512</td><td>224,256,384,512</td><td>Y</td><td/></tr>
                    <tr><td>256</td><td>224,256</td><td>Y</td><td/></tr>
                    <tr><td>Tiger</td><td/><td>192</td><td>Y</td><td/></tr>
                    <tr><td>WHIRLPOOL</td><td/><td>512</td><td>Y</td><td/></tr>
                    <tr><td rowspan="2">Streebog</td><td>512</td><td>512</td><td>Y</td><td rowspan="2">GOST3411-2012</td></tr>
                    <tr><td>256</td><td>256</td><td>Y</td></tr>
                    <tr><td>GOST</td><td/><td>256</td><td>Y</td><td>GOST3411-94</td></tr>
                    <tr><td rowspan="2">RipeMD</td><td>128</td><td>128,160</td><td>Y</td><td/></tr>
                    <tr><td>256</td><td>256,320</td><td>Y</td><td/></tr>
                    <tr><td>SHA3</td><td/><td>224,256,384,512</td><td>Y</td><td/></tr>
                    <tr><td rowspan="3">Skein</td><td>256</td><td>128,160,224,256</td><td>Y</td><td/></tr>
                    <tr><td>512</td><td>128,160,224,256,384,512</td><td>Y</td><td/></tr>
                    <tr><td>1024</td><td>384,512,1024</td><td>Y</td><td/></tr>
                    <tr><td>SM3</td><td/><td>256</td><td>Y</td><td/></tr>
                    <tr><td>Blake2s</td><td>256</td><td>128,160,224,256</td><td>Y</td><td/></tr>
                    <tr><td>Blake2b</td><td>512</td><td>160,256,384,512</td><td>Y</td><td/></tr>
                    <tr><td>Blake3</td><td>512</td><td>256,512</td><td/><td/></tr>
                    <tr><td>SHA1</td><td/><td>160</td><td>Y</td><td/></tr>
                    <tr><td>MD2</td><td/><td>128</td><td>Y</td><td/></tr>
                    <tr><td>MD4</td><td/><td>128</td><td>Y</td><td/></tr>
                    <tr><td>MD5</td><td/><td>128</td><td>Y</td><td/></tr>
                    <tr><td rowspan="2">SHAKE</td><td>128</td><td>128,160,224,256</td><td/><td/></tr>
                    <tr><td>256</td><td>256,384,512</td><td/><td/></tr>
                    <tr><td>Kupyna</td><td/><td>256,384,512</td><td>Y</td><td>DSTU7564</td></tr>
                    <tr><td>JH</td><td/><td>224,256,384,512</td><td/><td/></tr>
                    <tr><td>Groestl</td><td/><td>224,256,384,512</td><td/><td/></tr>
                    <tr><td>CubeHash</td><td/><td>224,256,384,512</td><td/><td/></tr>
                    <tr><td rowspan="2">Kangaroo</td><td>128</td><td>128,160,224,256</td><td/><td>Kangaroo12</td></tr>
                    <tr><td>256</td><td>256,384,512</td><td/><td>Marsupilami14</td></tr>
                    <tr><td>Haraka</td><td>256, 512</td><td>256</td><td>Y</td><td>Note that input must be same length as stateLength</td></tr>
                </table>
            </subsection>
        </section>
    </body>
</document>
