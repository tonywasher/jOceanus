<document>
    <properties>
        <title>GordianKnot Symmetric Ciphers</title>
        <author email="Tony.Washer@yahoo.co.uk">Tony Washer</author>
    </properties>
    <body>
        <section name="Overview">
            <p>GordianKnot supports most Symmetric Block and Stream Ciphers available from BouncyCastle plus some additional ciphers.</p>
            <p>A cipher for block encryption/decryption is created by specifying a CipherSpec which comprises the symKeySpec (algorithm/BlockSize)
                with the cipherMode and padding (if required). The cipher can be used in much the same way as a JCA Cipher,
                allowing init, update and finalise methods.</p>
            <p>A cipher for stream encryption is created by specifying the algorithm. The cipher can be used similarly to a blockCipher.</p>
            <p>A cipher for blockCipher keyWrapping is created by specifying the symKeySpec. The cipher allows init, secure and derive methods</p>
        </section>
        <section name="Block Ciphers">
            <p>The following algorithms are supported.</p>
            <table class="defTable">
                <tr><td class="defHdr">Algorithm</td><td class="defHdr">BlockSize</td><td class="defHdr" colspan="2">BouncyCastle</td><td class="defHdr" colspan="2">JCA</td></tr>
                <tr><td class="defHdr" colspan="2"/><td class="defHdr">128</td><td class="defHdr">256</td><td class="defHdr">128</td><td class="defHdr">256</td></tr>
                <tr><td>AES</td><td>128</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td></tr>
                <tr><td>Serpent</td><td>128</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td></tr>
                <tr><td>TwoFish</td><td>128</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td></tr>
                <tr><td>Camellia</td><td>128</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td></tr>
                <tr><td>CAST6</td><td>128</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td></tr>
                <tr><td>RC6</td><td>128</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td></tr>
                <tr><td>ARIA</td><td>128</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td></tr>
                <tr><td rowspan="2">Kalyna</td><td>128</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td></tr>
                <tr><td>256</td><td/><td>Y</td><td/><td>Y</td></tr>
                <tr><td>Kuznyechik</td><td>128</td><td/><td>Y</td><td/><td>Y</td></tr>
                <tr><td>ThreeFish</td><td>256</td><td/><td>Y</td><td/><td>Y</td></tr>
                <tr><td>NoeKeon</td><td>64</td><td>Y</td><td/><td>Y</td><td/></tr>
                <tr><td>SM4</td><td>64</td><td>Y</td><td/><td>Y</td><td/></tr>
                <tr><td>SEED</td><td>64</td><td>Y</td><td/><td>Y</td><td/></tr>
                <tr><td>SKIPJACK</td><td>64</td><td>Y</td><td/><td>Y</td><td/></tr>
                <tr><td>BlowFish</td><td>64</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td></tr>
                <tr><td>RC2</td><td>64</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td></tr>
                <tr><td>DESede</td><td>64</td><td>Y</td><td/><td>Y</td><td/></tr>
                <tr><td>CAST5</td><td>64</td><td>Y</td><td/><td>Y</td><td/></tr>
                <tr><td rowspan="2">RC5</td><td>64</td><td>Y</td><td/><td>Y</td><td/></tr>
                <tr><td>128</td><td>Y</td><td/><td>Y</td><td/></tr>
                <tr><td>IDEA</td><td>64</td><td>Y</td><td/><td>Y</td><td/></tr>
                <tr><td>TEA</td><td>64</td><td>Y</td><td/><td>Y</td><td/></tr>
                <tr><td>XTEA</td><td>64</td><td>Y</td><td/><td>Y</td><td/></tr>
                <tr><td>Magma</td><td>64</td><td/><td>Y</td><td/><td>Y</td></tr>
                <tr><td>SHACAL2</td><td>256</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td></tr>
                <tr><td rowspan="2">Speck</td><td>64</td><td>Y</td><td/><td/><td/></tr>
                <tr><td>128</td><td>Y</td><td>Y</td><td/><td/></tr>
                <tr><td rowspan="2">Simon</td><td>64</td><td>Y</td><td/><td/><td/></tr>
                <tr><td>128</td><td>Y</td><td>Y</td><td/><td/></tr>
                <tr><td>MARS</td><td>128</td><td>Y</td><td>Y</td><td/><td/></tr>
                <tr><td>Anubis</td><td>128</td><td>Y</td><td>Y</td><td/><td/></tr>
            </table>
            <subsection name="Cipher Modes">
                <p>The following modes can be used by the above ciphers</p>
                <table class="defTable">
                    <tr><td class="defHdr">Mode</td><td class="defHdr">BouncyCastle</td><td class="defHdr">JCA</td><td class="defHdr">Notes</td></tr>
                    <tr><td>ECB</td><td>Y</td><td>Y</td><td/></tr>
                    <tr><td>CBC</td><td>Y</td><td>Y</td><td>JCA maps to K3413CBC for Kuznyechik</td></tr>
                    <tr><td>K3413CBC</td><td>Y</td><td/><td>Only available for Kuznyechik</td></tr>
                    <tr><td>SIC</td><td>Y</td><td>Y</td><td>Jca maps to KCTR for Kalyna and K3413CTR for Kuznyechik</td></tr>
                    <tr><td>KCTR</td><td>Y</td><td/><td>Only available for Kalyna</td></tr>
                    <tr><td>K3413CTR</td><td>Y</td><td/><td>Only available for Kuznyechik</td></tr>
                    <tr><td>OFB</td><td>Y</td><td>Y</td><td>Jca maps to GOFB for Magma and K3413OFB for Kuznyechik</td></tr>
                    <tr><td>GOFB</td><td>Y</td><td/><td>Only available for Magma</td></tr>
                    <tr><td>K3413OFB</td><td>Y</td><td/><td>Only available for Kuznyechik</td></tr>
                    <tr><td>CFB</td><td>Y</td><td>Y</td><td>Actually requests CFB8. Jca maps to GCFB for Magma and K3413CFB for Kuznyechik</td></tr>
                    <tr><td>GCFB</td><td>Y</td><td/><td>Only available for Magma</td></tr>
                    <tr><td>K3413CFB</td><td>Y</td><td/><td>Only available for Kuznyechik</td></tr>
                    <tr><td>CCM</td><td>Y</td><td>Y</td><td>Jca maps to KCCM for Kalyna</td></tr>
                    <tr><td>KCCM</td><td>Y</td><td/><td>Only available for Kalyna</td></tr>
                    <tr><td>GCM</td><td>Y</td><td>Y</td><td>Jca maps to KGCM for Kalyna</td></tr>
                    <tr><td>KGCM</td><td>Y</td><td/><td>Only available for Kalyna</td></tr>
                    <tr><td>EAX</td><td>Y</td><td>Y</td><td/></tr>
                    <tr><td>OCB</td><td>Y</td><td>Y</td><td/></tr>
                </table>
            </subsection>
            <subsection name="Padding">
                <p>The following paddings can be used for ECB and CBC modes</p>
                <table class="defTable">
                    <tr><td class="defHdr">Padding</td><td class="defHdr">BouncyCastle</td><td class="defHdr">JCA</td><td class="defHdr">Notes</td></tr>
                    <tr><td>CTS</td><td>Y</td><td>Y</td><td/></tr>
                    <tr><td>ISO7816-4</td><td>Y</td><td>Y</td><td/></tr>
                    <tr><td>PKCS7</td><td>Y</td><td/><td/></tr>
                    <tr><td>X9.63</td><td>Y</td><td>Y</td><td/></tr>
                    <tr><td>TBC</td><td>Y</td><td>Y</td><td/></tr>
                    <tr><td>NONE</td><td>Y</td><td>Y</td><td>Implicitly used for modes other than ECB/CBC</td></tr>
                </table>
            </subsection>
            <subsection name="Key Wrapping">
                <p>Key Wrapping is performed by GordianKnot using a variant of the AES Key Wrapping algorithm specified in <a href="https://tools.ietf.org/html/rfc5649">RFC 5649</a></p>
                <p>The differences are necessary to enable support of ciphers that do not have the standard blockSize of 128 bits, since RFC 5649 assumes a 128 bit blockSize.</p>
                <ol>
                    <li>For blockSizes of 256 bits, the 32-bit Integrity Vector of <strong>0xA65959A6</strong> is expanded to the 96-bit <strong>0xA65959A6A65959A6A65959A6</strong> so that when combined with
                        the 32-bit dataLen of the wrapped data it comprises the half-block needed for the wrapping algorithm. This method can be extended to support any block size &gt;= 128.</li>
                    <li>For blockSizes of 64, the Integrity Vector using the above adjustment becomes zero length, which is not very useful. In this case, we retain the
                        standard 32-bit	Integrity Vector of <strong>0xA65959A6</strong> and prefix the 32-bit dataLen to the data to be wrapped.</li>
                </ol>
                <p>In addition, a block of random data is inserted immediately prior to the data to be wrapped.</p>
            </subsection>
        </section>
        <section name="Stream Ciphers">
            <p>The following algorithms are supported.</p>
            <table class="defTable">
                <tr><td class="defHdr">Algorithm</td><td class="defHdr" colspan="2">BouncyCastle</td><td class="defHdr" colspan="2">JCA</td><td class="defHdr">Notes</td></tr>
                <tr><td class="defHdr"/><td class="defHdr">128</td><td class="defHdr">256</td><td class="defHdr">128</td><td class="defHdr">256</td><td class="defHdr"/></tr>
                <tr><td>ChaCha</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td><td>ChaCha7359 used for 256 keySize</td></tr>
                <tr><td>Salsa20</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td><td/></tr>
                <tr><td>XChaCha</td><td/><td>Y</td><td/><td/><td/></tr>
                <tr><td>XSalsa20</td><td/><td>Y</td><td/><td>Y</td><td/></tr>
                <tr><td>HC</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td><td>HC128/HC256 as appropriate</td></tr>
                <tr><td>VMPC</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td><td/></tr>
                <tr><td>ISAAC</td><td>Y</td><td>Y</td><td/><td/><td/></tr>
                <tr><td>RC4</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td><td/></tr>
                <tr><td>Grain128</td><td>Y</td><td/><td>Y</td><td/><td/></tr>
                <tr><td>Rabbit</td><td>Y</td><td/><td/><td/><td/></tr>
                <tr><td>Sosemanuk</td><td>Y</td><td/><td/><td/><td/></tr>
                <tr><td>Snow3G</td><td>Y</td><td/><td/><td/><td/></tr>
                <tr><td>Zuc</td><td>Y</td><td>Y</td><td/><td/><td>Zuc-128/Zuc-256 as appropriate</td></tr>
            </table>
        </section>
    </body>
</document>
