/* Dependencies */
dependencies {
    implementation project(':jmoneywise-core')
    implementation project(':jprometheus-swing')
    implementation project(':jprometheus-core')
    implementation project(':jmetis-swing')
    implementation project(':jmetis-core')
    implementation project(':jgordianknot-swing')
    implementation project(':jgordianknot-core')
    implementation project(':jtethys-swing')
    implementation project(':jtethys-core')
}

/* Description */
description = 'MoneyWise Personal Finance - Swing'

/* Specific Manifest details */
jar {
    manifest {
        from sharedManifest
        attributes(
            "Implementation-Title": project.description,
            "Main-Class": "net.sourceforge.joceanus.jmoneywise.lethe.ui.swing.Control",
            "Automatic-Module-Name": "net.sourceforge.joceanus.jmoneywise.swing",
            "SplashScreen-Image": "net/sourceforge/joceanus/jmoneywise/ui/icons/swing/MoneyWiseSplash.png",
            "Class-Path": configurations.runtimeClasspath.collect { "../${appLibDir}" + standardizePath(it.absolutePath) }.join(' ')         
        )        
    }
}

/* Build list of distributable modules */
task buildDistribution {
    def jarName = project.name + "-" + version + ".jar"
    def fullJarName = "$projectDir/build/libs/$jarName"
    rootProject.ext.newRenameMap[fullJarName] = "${appBinDir}" + jarName
    configurations.runtimeClasspath.each { d ->
            def oldName = d.getAbsolutePath()
            def newName = "${appLibDir}" + standardizePath(d.getAbsolutePath())
            rootProject.ext.newRenameMap[oldName] = newName
    }
}

/* Copy distributable modules to distribution directory */
task distribute {
    doLast {
        rootProject.ext.newRenameMap.each{ k, v -> 
            copy {
                into("$rootDir/dist/$v")
                from k
	        setDuplicatesStrategy(DuplicatesStrategy.EXCLUDE)
            }
        }
    }
}
distribute.dependsOn jar, ":jthemis-javafx:jar", ":jcoeus-javafx:jar", ":jcoeus-swing:jar", ":jprometheus-sheet-odf:jar", ":jprometheus-sheet-hssf:jar"
assemble.dependsOn distribute
